{"ast":null,"code":"var _jsxFileName = \"/Users/haiyenhaiyen/Documents/Project/world-recruit-master/src/components/main/TextList.js\";\nimport React from \"react\";\nimport { Grid, makeStyles, Avatar, ListItemText, Typography } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Heading from \"./Heading\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: \" 30px auto\",\n    backgroundColor: \"#F4FBFF\"\n  },\n  h: {\n    height: \"20px\"\n  },\n  p: {\n    textAlign: \"center\"\n  },\n  content: {\n    padding: \" 0 50px 30px 50px\",\n    textAlign: \"justify\"\n  },\n  info: {\n    height: 200\n  },\n  avatar: {\n    width: \"65px\",\n    height: \"65px\"\n  },\n  title: {\n    color: \"blue\",\n    fontSize: \"18px\",\n    paddingBottom: \"10px\"\n  },\n  image: {\n    display: \"block\",\n    width: \"80%\",\n    height: \"auto\",\n    margin: \"20% auto\",\n    padding: \"5px 0\",\n    height: \"300px\",\n    width: \"300px\",\n    [theme.breakpoints.down('sm')]: {\n      display: \"none\",\n      width: \"0%\"\n    }\n  }\n}));\n\nfunction getImgPath(imgSrc) {\n  return require(\"../../img/\" + imgSrc);\n}\n\nexport default function TextList(props) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    data: props.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.p,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, props.data.content))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    md: true,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, props.data.items.map((item, index) => {\n    return /*#__PURE__*/React.createElement(List, {\n      className: classes.info,\n      align: \"center\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.avatar,\n      src: getImgPath(item.image.src),\n      alt: item.image.alt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, item.title), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.textleft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, item.text)));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.image,\n    src: getImgPath(props.data.images.src),\n    alt: props.data.images.alt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    md: true,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, props.data.paragraphs.map((para, index) => {\n    return /*#__PURE__*/React.createElement(List, {\n      className: classes.info,\n      align: \"center\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.avatar,\n      src: getImgPath(para.image.src),\n      alt: para.image.alt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, para.title), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.textleft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, para.text)));\n  }))));\n}","map":{"version":3,"sources":["/Users/haiyenhaiyen/Documents/Project/world-recruit-master/src/components/main/TextList.js"],"names":["React","Grid","makeStyles","Avatar","ListItemText","Typography","List","ListItemAvatar","Heading","useStyles","theme","root","flexGrow","margin","backgroundColor","h","height","p","textAlign","content","padding","info","avatar","width","title","color","fontSize","paddingBottom","image","display","breakpoints","down","getImgPath","imgSrc","require","TextList","props","classes","data","items","map","item","index","src","alt","textleft","text","images","paragraphs","para"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, makeStyles, Avatar, ListItemText, Typography } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Heading from \"./Heading\";\n\nconst useStyles=makeStyles((theme)=>({\n  root: {\n    flexGrow: 1,\n    margin: \" 30px auto\",\n    backgroundColor: \"#F4FBFF\",\n  },\n  h:{\n    height:\"20px\",\n  },\n  p: {\n    textAlign:\"center\"\n  }, \n  content: {\n    padding:\" 0 50px 30px 50px\",\n    textAlign: \"justify\"\n  \n  },\n  info: {\n    height:200,\n  },\n  avatar:{\n    width: \"65px\",\n    height: \"65px\",\n  },\n  title:{\n    color:\"blue\",\n    fontSize: \"18px\",\n    paddingBottom: \"10px\",\n  },\n  image:{\n    display: \"block\",\n    width: \"80%\",\n    height: \"auto\",\n    margin: \"20% auto\",\n    padding:\"5px 0\",\n    height: \"300px\",\n    width: \"300px\",\n    [theme.breakpoints.down('sm')]: {\n     display: \"none\",\n     width: \"0%\",\n    },\n  }\n  }));\n\nfunction getImgPath(imgSrc) {\n  return require(\"../../img/\" + imgSrc);\n}\n\nexport default function TextList(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Heading data={props.data}/>\n      <Grid container spacing={2} className={classes.content}>\n        <Grid item item xs={12}>\n          <p className={classes.p}>{props.data.content}</p>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs md container direction=\"column\" justify=\"center\" alignItems=\"center\">\n              {props.data.items.map((item, index) => {\n                return(\n                  <List className={classes.info} align=\"center\" key = {index}>\n                    <ListItemAvatar>\n                    <img\n                    className={classes.avatar}\n                    src={getImgPath(item.image.src)}\n                    alt={item.image.alt}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <Typography className={classes.title}>\n                      {item.title}\n                    </Typography>\n                    <Typography variant=\"body2\" className={classes.textleft}>\n                      {item.text}\n                    </Typography>\n                  </ListItemText>\n                  </List>\n                );\n              })}\n        </Grid>\n        <Grid>\n          <Avatar \n            className={classes.image}\n            src={getImgPath(props.data.images.src)}\n            alt={props.data.images.alt}\n          />\n        </Grid>\n        <Grid item xs md container direction=\"column\" justify=\"center\" alignItems=\"center\">\n              {props.data.paragraphs.map((para, index) => {\n                return(\n                  <List className={classes.info} align=\"center\" key = {index}>\n                    <ListItemAvatar>\n                    <img\n                    className={classes.avatar}\n                    src={getImgPath(para.image.src)}\n                    alt={para.image.alt}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <Typography className={classes.title}>\n                      {para.title}\n                    </Typography>\n                    <Typography variant=\"body2\" className={classes.textleft}>\n                      {para.text}\n                    </Typography>\n                  </ListItemText>\n                  </List>\n                );\n              })}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}